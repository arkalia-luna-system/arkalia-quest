import random


def analyser_personnalite(profil):
    """
    Analyse la personnalit√© du joueur bas√©e sur ses actions et pr√©f√©rences
    """
    score_creatif = 0
    score_analytique = 0
    score_social = 0

    # Analyse bas√©e sur les badges obtenus
    badges = profil.get("badges", [])
    for badge in badges:
        if any(
            mot in badge.lower() for mot in ["cr√©atif", "artiste", "visuel", "meme"]
        ):
            score_creatif += 2
        elif any(
            mot in badge.lower()
            for mot in ["analytique", "espion", "d√©chiffreur", "ma√Ætre"]
        ):
            score_analytique += 2
        elif any(
            mot in badge.lower() for mot in ["social", "communicateur", "assistant"]
        ):
            score_social += 2

    # Analyse bas√©e sur les missions compl√©t√©es
    missions = profil.get("personnalite", {}).get("missions_completees", [])
    if len(missions) > 0:
        # Si beaucoup de missions, tendance analytique
        score_analytique += len(missions)

    # Analyse bas√©e sur le score total
    score_total = profil.get("score", 0)
    if score_total > 200:
        score_creatif += 1
    if score_total > 300:
        score_analytique += 1

    # D√©termination du type dominant
    scores = {
        "hacker_creatif": score_creatif,
        "hacker_analytique": score_analytique,
        "hacker_social": score_social,
    }

    max_score = max(scores.values())
    if max_score == 0:
        return "hacker_equilibre"

    # Retourne le type avec le score le plus √©lev√©
    for type_perso, score in scores.items():
        if score == max_score:
            return type_perso

    return "hacker_equilibre"


def generer_mission_personnalisee(profil):
    """
    G√©n√®re une mission personnalis√©e selon le type de personnalit√© d√©tect√©
    """
    type_personnalite = profil.get("personnalite", {}).get("type", "hacker_equilibre")

    missions_par_type = {
        "hacker_creatif": [
            {
                "id": "creatif_1",
                "titre": "üé® Cr√©er un Code Visuel",
                "description": "Tu dois cr√©er un algorithme qui g√©n√®re des motifs visuels. Utilise ta cr√©ativit√© pour inventer des patterns uniques !",
                "difficulte": "moyenne",
                "recompense": 60,
                "type": "creation",
            },
            {
                "id": "creatif_2",
                "titre": "üé≠ Pirater l'Interface Artistique",
                "description": "Infiltrer un syst√®me qui contr√¥le des installations artistiques. Trouve une approche cr√©ative et originale !",
                "difficulte": "difficile",
                "recompense": 80,
                "type": "infiltration",
            },
        ],
        "hacker_analytique": [
            {
                "id": "analytique_1",
                "titre": "üîç Analyser le Code Crypt√©",
                "description": "D√©chiffrer un algorithme complexe en analysant ses patterns et sa structure logique.",
                "difficulte": "moyenne",
                "recompense": 70,
                "type": "analyse",
            },
            {
                "id": "analytique_2",
                "titre": "‚öôÔ∏è Optimiser le Syst√®me",
                "description": "Trouver les failles d'efficacit√© dans un syst√®me et proposer des am√©liorations logiques.",
                "difficulte": "difficile",
                "recompense": 90,
                "type": "optimisation",
            },
        ],
        "hacker_social": [
            {
                "id": "social_1",
                "titre": "ü§ù Infiltrer le R√©seau Social",
                "description": "Utiliser tes comp√©tences sociales pour gagner la confiance d'un syst√®me IA et l'amener √† coop√©rer.",
                "difficulte": "moyenne",
                "recompense": 65,
                "type": "social",
            },
            {
                "id": "social_2",
                "titre": "üí¨ D√©coder les Messages Cach√©s",
                "description": "Analyser les communications entre syst√®mes pour comprendre leurs motivations et intentions.",
                "difficulte": "difficile",
                "recompense": 85,
                "type": "communication",
            },
        ],
        "hacker_equilibre": [
            {
                "id": "equilibre_1",
                "titre": "‚öñÔ∏è Mission √âquilibr√©e",
                "description": "Combiner cr√©ativit√©, logique et empathie pour r√©soudre un d√©fi complexe qui n√©cessite toutes tes comp√©tences.",
                "difficulte": "moyenne",
                "recompense": 75,
                "type": "mixte",
            },
            {
                "id": "equilibre_2",
                "titre": "üåü D√©bloquer le Potentiel Complet",
                "description": "Utiliser tes multiples talents pour d√©verrouiller un syst√®me qui s'adapte √† ton style unique.",
                "difficulte": "difficile",
                "recompense": 100,
                "type": "adaptatif",
            },
        ],
    }

    missions_disponibles = missions_par_type.get(
        type_personnalite, missions_par_type["hacker_equilibre"]
    )

    # √âviter de r√©p√©ter les missions d√©j√† compl√©t√©es
    missions_completees = profil.get("personnalite", {}).get("missions_completees", [])
    missions_nouvelles = [
        m for m in missions_disponibles if m["id"] not in missions_completees
    ]

    if missions_nouvelles:
        return random.choice(missions_nouvelles)
    else:
        # Si toutes les missions sont compl√©t√©es, g√©n√©rer une mission sp√©ciale
        return {
            "id": f"{type_personnalite}_special",
            "titre": "üèÜ Mission Ma√Ætre",
            "description": f"Tu as ma√Ætris√© tous les aspects de ton profil {type_personnalite.replace('_', ' ').title()}. Maintenant, prouve que tu es un vrai ma√Ætre !",
            "difficulte": "expert",
            "recompense": 150,
            "type": "maitre",
        }


def obtenir_conseils_personnalite(type_personnalite):
    """
    Retourne des conseils personnalis√©s selon le type de personnalit√©
    """
    conseils = {
        "hacker_creatif": [
            "Utilise ta cr√©ativit√© pour trouver des solutions uniques",
            "N'h√©site pas √† exp√©rimenter et √† penser diff√©remment",
            "Transforme les probl√®mes en opportunit√©s artistiques",
        ],
        "hacker_analytique": [
            "D√©compose les probl√®mes en parties logiques",
            "Analyse chaque d√©tail pour trouver les patterns",
            "Utilise la m√©thode scientifique pour tester tes hypoth√®ses",
        ],
        "hacker_social": [
            "√âcoute et observe les syst√®mes pour comprendre leurs motivations",
            "Utilise l'empathie pour anticiper les r√©actions",
            "Construis des relations de confiance avec les IA",
        ],
        "hacker_equilibre": [
            "Adapte ton approche selon la situation",
            "Combine diff√©rentes m√©thodes pour des r√©sultats optimaux",
            "Reste flexible et ouvert √† toutes les possibilit√©s",
        ],
    }

    return conseils.get(type_personnalite, ["Continue d'explorer et d'apprendre !"])
