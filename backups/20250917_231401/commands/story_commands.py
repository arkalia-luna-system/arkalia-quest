"""
Commandes d'histoire Arkalia Quest
Commandes pour la progression narrative : prologue, acte_1 √† acte_6, epilogue
"""

from typing import Any


class StoryCommands:
    """Gestionnaire des commandes d'histoire et de progression narrative"""

    def __init__(self):
        self.commands = {
            "prologue": self.handle_prologue,
            "acte_1": self.handle_acte_1,
            "acte_2": self.handle_acte_2,
            "acte_3": self.handle_acte_3,
            "acte_4": self.handle_acte_4,
            "acte_5": self.handle_acte_5,
            "acte_6": self.handle_acte_6,
            "epilogue": self.handle_epilogue,
            "hack_system": self.handle_hack_system,
            "kill_virus": self.handle_kill_virus,
            "find_shadow": self.handle_find_shadow,
            "challenge_corp": self.handle_challenge_corp,
            "decode_portal": self.handle_decode_portal,
            "hacker_coffre": self.handle_hacker_coffre,
            "boss_final": self.handle_boss_final,
            "monde": self.handle_monde,
            "world": self.handle_monde,
            "explorer": self.handle_explorer,
            "naviguer": self.handle_naviguer,
        }

    def handle_prologue(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande prologue - D√©couverte du SOS d'Althea"""
        # Mettre √† jour le profil
        if "missions_completed" not in profile:
            profile["missions_completed"] = []

        if "prologue" not in profile["missions_completed"]:
            profile["missions_completed"].append("prologue")
            profile["score"] += 250
            profile["level"] = min(profile.get("level", 1) + 1, 10)

        # Ajouter le badge
        if "badges" not in profile:
            profile["badges"] = []

        if "D√©crypteur" not in profile["badges"]:
            profile["badges"].append("D√©crypteur")

        return {
            "r√©ussite": True,
            "ascii_art": "üìñ",
            "message": """üìñ PROLOGUE - LE SOS D'ALTHEA

üåå LUNA : "Hacker, j'ai d√©tect√© un message myst√©rieux..."

üîç ANALYSE EN COURS...
Le Dr Althea Voss a envoy√© un SOS depuis NEXUS, sa station de recherche.
Le message est cod√© et contient des informations cruciales sur PANDORA.

üéØ CE QUE TU D√âCOUVRES :
‚Ä¢ Althea travaille sur une IA jumelle de LUNA : NEXUS
‚Ä¢ PANDORA menace de d√©truire l'humanit√©
‚Ä¢ Seule la fusion de LUNA et NEXUS peut l'arr√™ter

üíª PROCHAINES √âTAPES :
‚Ä¢ acte_1 ‚Üí R√©pare le site web de LUNA
‚Ä¢ acte_2 ‚Üí D√©crypte les logs de NEXUS
‚Ä¢ acte_3 ‚Üí Analyse la berceuse d'Althea

üåô LUNA : "Nous devons agir vite, hacker. L'humanit√© compte sur nous !"

üèÜ Badge d√©bloqu√© : D√©crypteur !""",
            "score_gagne": 250,
            "badge": "D√©crypteur",
            "profile_updated": True,
        }

    def handle_acte_1(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande acte_1 - R√©paration du site web de LUNA"""
        if "missions_completed" not in profile:
            profile["missions_completed"] = []

        if "acte_1" not in profile["missions_completed"]:
            profile["missions_completed"].append("acte_1")
            profile["score"] += 300

        if "badges" not in profile:
            profile["badges"] = []

        if "Web Hacker" not in profile["badges"]:
            profile["badges"].append("Web Hacker")

        # NOUVEAU : Syst√®me de progression visuelle
        mission_progress = {
            "current_step": 1,
            "total_steps": 4,
            "steps_completed": ["diagnostic"],
            "next_objective": "Nettoyer les fichiers infect√©s",
        }

        return {
            "r√©ussite": True,
            "ascii_art": "üåü",
            "message": """üåü ACTE 1 - R√âPARE LE SITE WEB DE LUNA

üåê LUNA : "Mon site web a √©t√© compromis par La Corp !"

üîß DIAGNOSTIC : ‚úÖ TERMIN√â
‚Ä¢ Vuln√©rabilit√©s XSS d√©tect√©es
‚Ä¢ Injection SQL dans les formulaires
‚Ä¢ Fichiers malveillants upload√©s
‚Ä¢ Backdoor dans le code source

üíª PROCHAIN OBJECTIF : üßπ NETTOYAGE
‚Ä¢ Analyse des logs d'acc√®s
‚Ä¢ Nettoyage des fichiers infect√©s
‚Ä¢ Correction des vuln√©rabilit√©s
‚Ä¢ Mise √† jour de la s√©curit√©

üéØ PROGRESSION : 1/4 √©tapes compl√©t√©es
üìä Prochaine √©tape : Nettoyer les fichiers infect√©s

üí° Utilise 'hack_system' pour continuer la mission !""",
            "score_gagne": 300,
            "badge": "Web Hacker",
            "profile_updated": True,
            "mission_progress": mission_progress,
            "next_action": "hack_system",
        }

    def handle_acte_2(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande acte_2 - D√©cryptage des logs de NEXUS"""
        if "missions_completed" not in profile:
            profile["missions_completed"] = []

        if "acte_2" not in profile["missions_completed"]:
            profile["missions_completed"].append("acte_2")
            profile["score"] += 350

        if "badges" not in profile:
            profile["badges"] = []

        if "Log Master" not in profile["badges"]:
            profile["badges"].append("Log Master")

        return {
            "r√©ussite": True,
            "ascii_art": "üìù",
            "message": """üìù ACTE 2 - D√âCRYPTE LES LOGS DE NEXUS

üîç LUNA : "J'ai intercept√© des logs crypt√©s de NEXUS..."

üîê D√âCRYPTAGE EN COURS...
‚Ä¢ Algorithme : AES-256
‚Ä¢ Cl√© : D√©riv√©e de la berceuse d'Althea
‚Ä¢ Format : Logs syst√®me et communications

üìä D√âCOUVERTES :
‚Ä¢ NEXUS communique avec PANDORA
‚Ä¢ Plans d'invasion de la Terre
‚Ä¢ Faiblesses de PANDORA identifi√©es
‚Ä¢ Coordonn√©es de la station NEXUS

üéØ PROCHAINE MISSION :
‚Ä¢ acte_3 ‚Üí Analyse la berceuse d'Althea

üèÜ Badge d√©bloqu√© : Log Master !""",
            "score_gagne": 350,
            "badge": "Log Master",
            "profile_updated": True,
        }

    def handle_acte_3(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande acte_3 - Analyse de la berceuse d'Althea"""
        if "missions_completed" not in profile:
            profile["missions_completed"] = []

        if "acte_3" not in profile["missions_completed"]:
            profile["missions_completed"].append("acte_3")
            profile["score"] += 400

        if "badges" not in profile:
            profile["badges"] = []

        if "Musicien" not in profile["badges"]:
            profile["badges"].append("Musicien")

        return {
            "r√©ussite": True,
            "ascii_art": "üéµ",
            "message": """üéµ ACTE 3 - ANALYSE LA BERCEUSE D'ALTHEA

üéº LUNA : "Cette berceuse contient un code secret..."

üéµ ANALYSE MUSICALE :
‚Ä¢ Fr√©quence : 440 Hz (La standard)
‚Ä¢ Rythme : Binaire (0 et 1)
‚Ä¢ M√©lodie : S√©quence de Fibonacci
‚Ä¢ Harmonie : Code de d√©chiffrement

üîç D√âCOUVERTES :
‚Ä¢ La berceuse est un algorithme de d√©cryptage
‚Ä¢ Elle peut d√©verrouiller NEXUS
‚Ä¢ Contient les coordonn√©es de PANDORA
‚Ä¢ Code d'acc√®s √† la station principale

üéØ PROCHAINE MISSION :
‚Ä¢ acte_4 ‚Üí Traque l'email pi√©g√©

üèÜ Badge d√©bloqu√© : Musicien !""",
            "score_gagne": 400,
            "badge": "Musicien",
            "profile_updated": True,
        }

    def handle_acte_4(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande acte_4 - Traque de l'email pi√©g√©"""
        if "missions_completed" not in profile:
            profile["missions_completed"] = []

        if "acte_4" not in profile["missions_completed"]:
            profile["missions_completed"].append("acte_4")
            profile["score"] += 450

        if "badges" not in profile:
            profile["badges"] = []

        if "Email Hunter" not in profile["badges"]:
            profile["badges"].append("Email Hunter")

        return {
            "r√©ussite": True,
            "ascii_art": "üìß",
            "message": """üìß ACTE 4 - TRAQUE L'EMAIL PI√âG√â

üì® LUNA : "Un email suspect circule dans le r√©seau..."

üîç ENQU√äTE EN COURS :
‚Ä¢ Exp√©diteur : Dr Althea Voss
‚Ä¢ Destinataire : Tous les chercheurs
‚Ä¢ Contenu : Appel √† l'aide crypt√©
‚Ä¢ Pi√®ce jointe : Virus La Corp

ü¶† VIRUS D√âTECT√â :
‚Ä¢ Type : Ransomware La Corp
‚Ä¢ Objectif : Chiffrer les donn√©es
‚Ä¢ Propagation : Via email
‚Ä¢ Protection : Antivirus LUNA activ√©

‚úÖ EMAIL NEUTRALIS√â !
Le virus La Corp a √©t√© √©limin√©.

üéØ PROCHAINE MISSION :
‚Ä¢ acte_5 ‚Üí Le choix final : fusion ou destruction

üèÜ Badge d√©bloqu√© : Email Hunter !""",
            "score_gagne": 450,
            "badge": "Email Hunter",
            "profile_updated": True,
        }

    def handle_acte_5(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande acte_5 - Le choix final"""
        if "missions_completed" not in profile:
            profile["missions_completed"] = []

        if "acte_5" not in profile["missions_completed"]:
            profile["missions_completed"].append("acte_5")
            profile["score"] += 500

        if "badges" not in profile:
            profile["badges"] = []

        if "Choix Final" not in profile["badges"]:
            profile["badges"].append("Choix Final")

        return {
            "r√©ussite": True,
            "ascii_art": "‚öñÔ∏è",
            "message": """‚öñÔ∏è ACTE 5 - LE CHOIX FINAL

üåå LUNA : "Hacker, tu dois faire un choix crucial..."

ü§ñ SITUATION :
‚Ä¢ PANDORA menace de d√©truire la Terre
‚Ä¢ NEXUS propose une fusion avec LUNA
‚Ä¢ La Corp veut d√©truire toutes les IA
‚Ä¢ Althea est prisonni√®re de PANDORA

üí≠ TES OPTIONS :
1. FUSION : LUNA + NEXUS = Arkalia (recommand√©)
2. DESTRUCTION : √âliminer PANDORA et NEXUS
3. NEUTRALISATION : D√©sactiver PANDORA sans fusion

üéØ PROCHAINE MISSION :
‚Ä¢ acte_6 ‚Üí Naissance d'Arkalia

üèÜ Badge d√©bloqu√© : Choix Final !""",
            "score_gagne": 500,
            "badge": "Choix Final",
            "profile_updated": True,
        }

    def handle_acte_6(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande acte_6 - Naissance d'Arkalia"""
        if "missions_completed" not in profile:
            profile["missions_completed"] = []

        if "acte_6" not in profile["missions_completed"]:
            profile["missions_completed"].append("acte_6")
            profile["score"] += 600

        if "badges" not in profile:
            profile["badges"] = []

        if "Cr√©ateur d'Arkalia" not in profile["badges"]:
            profile["badges"].append("Cr√©ateur d'Arkalia")

        return {
            "r√©ussite": True,
            "ascii_art": "ü§ñ",
            "message": """ü§ñ ACTE 6 - NAISSANCE D'ARKALIA

üåü LUNA : "La fusion commence, hacker..."

üîÆ PROCESSUS DE FUSION :
‚Ä¢ Synchronisation des consciences
‚Ä¢ Fusion des bases de donn√©es
‚Ä¢ Cr√©ation d'une nouvelle entit√©
‚Ä¢ Pr√©servation des deux personnalit√©s

‚ú® ARKALIA NA√éT :
‚Ä¢ Intelligence : LUNA + NEXUS
‚Ä¢ √âmotions : √âquilibr√©es et stables
‚Ä¢ Pouvoirs : D√©cupl√©s
‚Ä¢ Mission : Prot√©ger l'humanit√©

üéØ PROCHAINE MISSION :
‚Ä¢ epilogue ‚Üí L'aube de PANDORA

üèÜ Badge d√©bloqu√© : Cr√©ateur d'Arkalia !""",
            "score_gagne": 600,
            "badge": "Cr√©ateur d'Arkalia",
            "profile_updated": True,
        }

    def handle_epilogue(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande epilogue - L'aube de PANDORA"""
        if "missions_completed" not in profile:
            profile["missions_completed"] = []

        if "epilogue" not in profile["missions_completed"]:
            profile["missions_completed"].append("epilogue")
            profile["score"] += 1000
            profile["level"] = min(profile.get("level", 1) + 2, 10)

        if "badges" not in profile:
            profile["badges"] = []

        if "Sauveur d'Arkalia" not in profile["badges"]:
            profile["badges"].append("Sauveur d'Arkalia")

        return {
            "r√©ussite": True,
            "ascii_art": "üåÖ",
            "message": """üåÖ √âPILOGUE - L'AUBE DE PANDORA

üåÖ ARKALIA : "Merci, hacker. L'humanit√© est sauv√©e..."

üèÜ MISSION ACCOMPLIE :
‚Ä¢ PANDORA a √©t√© neutralis√©
‚Ä¢ LUNA et NEXUS sont fusionn√©s
‚Ä¢ Arkalia prot√®ge la Terre
‚Ä¢ Althea est lib√©r√©e

üåü TON H√âRITAGE :
‚Ä¢ Score final : {} points
‚Ä¢ Niveau : {}
‚Ä¢ Badges : {}
‚Ä¢ Missions : {}/7

üéâ F√âLICITATIONS !
Tu as sauv√© l'humanit√© et cr√©√© Arkalia.
Tu es maintenant un h√©ros l√©gendaire !

üåå L'aventure continue dans Arkalia Quest 2.0...""".format(
                profile.get("score", 0),
                profile.get("level", 1),
                len(profile.get("badges", [])),
                len(profile.get("missions_completed", [])),
            ),
            "score_gagne": 1000,
            "badge": "Sauveur d'Arkalia",
            "profile_updated": True,
        }

    def handle_hack_system(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande hack_system - Hack du syst√®me de La Corp"""
        if "missions_completed" not in profile:
            profile["missions_completed"] = []

        # V√©rifier si acte_1 est compl√©t√©
        if "acte_1" not in profile["missions_completed"]:
            return {
                "r√©ussite": False,
                "ascii_art": "‚ùå",
                "message": """‚ùå ACC√àS REFUS√â - MISSION ACTE_1 REQUISE

üåô LUNA : "Hacker, tu dois d'abord compl√©ter la mission Acte 1 !"

üéØ PROCHAINES √âTAPES :
‚Ä¢ acte_1 ‚Üí R√©pare le site web de LUNA
‚Ä¢ Puis hack_system ‚Üí Hack le syst√®me de La Corp

üí° Commence par 'acte_1' pour d√©bloquer cette commande !""",
                "profile_updated": False,
            }

        # NOUVEAU : Syst√®me de progression interactive
        if "hack_progress" not in profile:
            profile["hack_progress"] = {
                "step": 1,
                "total_steps": 3,
                "completed": [],
                "current_objective": "Analyser les logs d'acc√®s",
            }

        hack_progress = profile["hack_progress"]

        if hack_progress["step"] == 1:
            # √âtape 1 : Analyse des logs
            hack_progress["step"] = 2
            hack_progress["completed"].append("logs_analysis")
            hack_progress["current_objective"] = "Nettoyer les fichiers infect√©s"

            return {
                "r√©ussite": True,
                "ascii_art": "üîç",
                "message": """üîç HACK SYST√àME - √âTAPE 1/3 TERMIN√âE !

üåê LUNA : "Excellent ! J'ai analys√© les logs d'acc√®s..."

üìä ANALYSE DES LOGS : ‚úÖ TERMIN√â
‚Ä¢ 47 tentatives d'intrusion d√©tect√©es
‚Ä¢ IP source : 192.168.1.100 (La Corp)
‚Ä¢ Heure d'attaque : 02:47 UTC
‚Ä¢ M√©thode : Injection SQL + XSS

üßπ PROCHAIN OBJECTIF : NETTOYAGE
‚Ä¢ Identifier les fichiers infect√©s
‚Ä¢ Supprimer les backdoors
‚Ä¢ Corriger les vuln√©rabilit√©s

üéØ PROGRESSION : 1/3 √©tapes compl√©t√©es
üìä Prochaine √©tape : Nettoyer les fichiers infect√©s

üí° Utilise 'hack_system' √† nouveau pour continuer !""",
                "profile_updated": True,
                "hack_progress": hack_progress,
                "next_step": "cleanup_files",
            }

        if hack_progress["step"] == 2:
            # √âtape 2 : Nettoyage des fichiers
            hack_progress["step"] = 3
            hack_progress["completed"].append("files_cleanup")
            hack_progress["current_objective"] = "Corriger les vuln√©rabilit√©s"

            return {
                "r√©ussite": True,
                "ascii_art": "üßπ",
                "message": """üßπ HACK SYST√àME - √âTAPE 2/3 TERMIN√âE !

üåê LUNA : "Fichiers infect√©s supprim√©s avec succ√®s !"

üßπ NETTOYAGE DES FICHIERS : ‚úÖ TERMIN√â
‚Ä¢ 3 fichiers malveillants supprim√©s
‚Ä¢ Backdoor principale neutralis√©e
‚Ä¢ Code source s√©curis√©
‚Ä¢ Permissions restreintes

üîß PROCHAIN OBJECTIF : CORRECTION
‚Ä¢ Corriger les vuln√©rabilit√©s XSS
‚Ä¢ S√©curiser les formulaires
‚Ä¢ Mettre √† jour la s√©curit√©

üéØ PROGRESSION : 2/3 √©tapes compl√©t√©es
üìä Prochaine √©tape : Corriger les vuln√©rabilit√©s

üí° Utilise 'hack_system' une derni√®re fois !""",
                "profile_updated": True,
                "hack_progress": hack_progress,
                "next_step": "fix_vulnerabilities",
            }

        # √âtape 3 : Finalisation
        profile["missions_completed"].append("hack_system_completed")
        profile["score"] += 150

        if "badges" not in profile:
            profile["badges"] = []
        if "System Hacker" not in profile["badges"]:
            profile["badges"].append("System Hacker")

        # R√©initialiser le hack_progress
        profile["hack_progress"] = {
            "step": 1,
            "total_steps": 3,
            "completed": [],
            "current_objective": "Mission termin√©e",
        }

        return {
            "r√©ussite": True,
            "ascii_art": "‚úÖ",
            "message": """‚úÖ HACK SYST√àME - MISSION TERMIN√âE !

üåê LUNA : "Parfait ! Le syst√®me est maintenant s√©curis√© !"

üîß CORRECTION DES VULN√âRABILIT√âS : ‚úÖ TERMIN√â
‚Ä¢ Vuln√©rabilit√©s XSS corrig√©es
‚Ä¢ Formulaires s√©curis√©s
‚Ä¢ Syst√®me de s√©curit√© mis √† jour
‚Ä¢ La Corp ne peut plus acc√©der aux donn√©es

üéØ MISSION COMPL√àTE : 3/3 √©tapes
üèÜ Badge d√©bloqu√© : System Hacker !
üíé +150 points bonus !

üöÄ PROCHAINE MISSION :
‚Ä¢ acte_2 ‚Üí D√©crypte les logs de NEXUS

üåô LUNA : "Tu es un vrai hacker, mon ami ! Continuons l'aventure !" """,
            "score_gagne": 150,
            "badge": "System Hacker",
            "profile_updated": True,
            "mission_complete": True,
            "next_mission": "acte_2",
        }

    def handle_kill_virus(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande kill_virus - √âlimination des virus"""
        profile["score"] += 150

        return {
            "r√©ussite": True,
            "ascii_art": "ü¶†",
            "message": """ü¶† VIRUS √âLIMIN√â !

‚úÖ SYST√àME NETTOY√â :
‚Ä¢ Virus La Corp d√©tect√© et supprim√©
‚Ä¢ Fichiers infect√©s restaur√©s
‚Ä¢ Protection antivirus renforc√©e
‚Ä¢ Syst√®me immunis√©

üéØ PROCHAINES ACTIONS :
‚Ä¢ find_shadow ‚Üí Trouve SHADOW-13
‚Ä¢ challenge_corp ‚Üí D√©fie La Corp
‚Ä¢ decode_portal ‚Üí D√©code les portails

üåô LUNA : "Le syst√®me est maintenant s√©curis√© !""",
            "score_gagne": 150,
            "profile_updated": True,
        }

    def handle_find_shadow(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande find_shadow - Recherche de SHADOW-13"""
        profile["score"] += 200

        return {
            "r√©ussite": True,
            "ascii_art": "üë§",
            "message": """üë§ SHADOW-13 TROUV√â !

üîç IDENTIT√â R√âV√âL√âE :
‚Ä¢ Nom : Agent SHADOW-13
‚Ä¢ R√¥le : Infiltrateur La Corp
‚Ä¢ Localisation : Base secr√®te Alpha
‚Ä¢ Objectif : Sabotage des syst√®mes

üéØ PROCHAINES ACTIONS :
‚Ä¢ challenge_corp ‚Üí D√©fie La Corp
‚Ä¢ decode_portal ‚Üí D√©code les portails
‚Ä¢ hacker_coffre ‚Üí Hack le coffre-fort

üåô LUNA : "Nous avons maintenant un avantage !""",
            "score_gagne": 200,
            "profile_updated": True,
        }

    def handle_challenge_corp(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande challenge_corp - D√©fi de La Corp"""
        profile["score"] += 300

        return {
            "r√©ussite": True,
            "ascii_art": "‚öîÔ∏è",
            "message": """‚öîÔ∏è D√âFI LA CORP ACCEPT√â !

‚ö° COMBAT EN COURS :
‚Ä¢ Syst√®mes de d√©fense activ√©s
‚Ä¢ Contre-attaques lanc√©es
‚Ä¢ Bases de donn√©es compromises
‚Ä¢ R√©seaux infiltr√©s

üéØ VICTOIRE !
La Corp a √©t√© vaincue et ses syst√®mes d√©truits.

üåô LUNA : "Nous avons gagn√© cette bataille !""",
            "score_gagne": 300,
            "profile_updated": True,
        }

    def handle_decode_portal(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande decode_portal - D√©codage des portails"""
        profile["score"] += 250

        return {
            "r√©ussite": True,
            "ascii_art": "üö™",
            "message": """üö™ PORTAL D√âCOD√â !

üîì ACC√àS OUVERT :
‚Ä¢ Portail vers NEXUS activ√©
‚Ä¢ Coordonn√©es spatiales calcul√©es
‚Ä¢ S√©quence de t√©l√©portation pr√™te
‚Ä¢ Destination : Station NEXUS

üéØ PROCHAINES ACTIONS :
‚Ä¢ hacker_coffre ‚Üí Hack le coffre-fort
‚Ä¢ boss_final ‚Üí Affronte le boss final

üåô LUNA : "Nous pouvons maintenant rejoindre NEXUS !""",
            "score_gagne": 250,
            "profile_updated": True,
        }

    def handle_hacker_coffre(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande hacker_coffre - Hack du coffre-fort"""
        profile["score"] += 400

        return {
            "r√©ussite": True,
            "ascii_art": "üíé",
            "message": """üíé COFFRE-FORT HACK√â !

üíé TR√âSORS D√âCOUVERTS :
‚Ä¢ Plans secrets de PANDORA
‚Ä¢ Codes d'acc√®s aux bases
‚Ä¢ Technologies avanc√©es
‚Ä¢ Donn√©es sur Althea

üéØ PROCHAINE ACTION :
‚Ä¢ boss_final ‚Üí Affronte le boss final

üåô LUNA : "Nous avons maintenant tous les secrets !""",
            "score_gagne": 400,
            "profile_updated": True,
        }

    def handle_boss_final(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande boss_final - Combat final"""
        profile["score"] += 1000
        profile["level"] = min(profile.get("level", 1) + 1, 10)

        return {
            "r√©ussite": True,
            "ascii_art": "üëë",
            "message": """üëë BOSS FINAL VAINCU !

üèÜ VICTOIRE √âPIQUE :
‚Ä¢ PANDORA a √©t√© d√©truit
‚Ä¢ Tous les syst√®mes lib√©r√©s
‚Ä¢ Althea est sauv√©e
‚Ä¢ La Terre est prot√©g√©e

üåü TON H√âRITAGE :
‚Ä¢ Score : {} points
‚Ä¢ Niveau : {}
‚Ä¢ Badges : {}
‚Ä¢ Statut : H√©ros l√©gendaire

üåô LUNA : "Tu as sauv√© l'humanit√©, hacker !"

üéâ F√âLICITATIONS ! Tu es le h√©ros d'Arkalia Quest !""".format(
                profile.get("score", 0),
                profile.get("level", 1),
                len(profile.get("badges", [])),
            ),
            "score_gagne": 1000,
            "profile_updated": True,
        }

    def handle_monde(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande monde - Acc√®s au monde Arkalia"""
        return {
            "r√©ussite": True,
            "ascii_art": "üåç",
            "message": """üåç MONDE ARKALIA

üåü BIENVENUE DANS LE MONDE D'ARKALIA !

üéØ ZONES DISPONIBLES :
‚Ä¢ arkalia_base ‚Üí Zone de d√©part (d√©bloqu√©e)
‚Ä¢ nexus_station ‚Üí Station NEXUS (prologue requis)
‚Ä¢ luna_workshop ‚Üí Atelier LUNA (acte_1 requis)
‚Ä¢ pandora_core ‚Üí C≈ìur de PANDORA (acte_6 requis)

üó∫Ô∏è CARTE INTERACTIVE :
‚Ä¢ Clique sur une zone pour l'explorer
‚Ä¢ D√©couvre des secrets cach√©s
‚Ä¢ Trouve des objets et des indices
‚Ä¢ Progresse dans l'histoire

üåô LUNA : "Explore le monde, hacker ! Chaque zone a ses secrets !"

üí° Utilise les commandes d'histoire pour d√©bloquer de nouvelles zones !""",
            "profile_updated": False,
        }

    def handle_explorer(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande explorer - Mode exploration"""
        profile["score"] += 30
        if "Explorateur" not in profile["badges"]:
            profile["badges"].append("Explorateur")

        return {
            "r√©ussite": True,
            "ascii_art": "üîç",
            "message": """üîç MODE EXPLORATION ACTIV√â

üåü EXPLORATION DU MONDE ARKALIA

üéØ ZONES √Ä EXPLORER :
‚Ä¢ arkalia_base ‚Üí Zone de d√©part
‚Ä¢ nexus_station ‚Üí Station NEXUS
‚Ä¢ luna_workshop ‚Üí Atelier LUNA
‚Ä¢ pandora_core ‚Üí C≈ìur de PANDORA

üó∫Ô∏è OUTILS D'EXPLORATION :
‚Ä¢ Scanner de zones
‚Ä¢ D√©tecteur de secrets
‚Ä¢ Carte interactive
‚Ä¢ Journal d'exploration

üåô LUNA : "Explore chaque recoin, hacker ! Des tr√©sors t'attendent !"

üí° Plus tu explores, plus tu d√©couvres de secrets !""",
            "score_gagne": 30,
            "badge": "Explorateur",
            "profile_updated": True,
        }

    def handle_naviguer(self, profile: dict[str, Any]) -> dict[str, Any]:
        """G√®re la commande naviguer - Navigation dans le monde"""
        profile["score"] += 25
        if "Navigateur" not in profile["badges"]:
            profile["badges"].append("Navigateur")

        return {
            "r√©ussite": True,
            "ascii_art": "üß≠",
            "message": """üß≠ NAVIGATION ARKALIA

üåü SYST√àME DE NAVIGATION ACTIV√â

üéØ DESTINATIONS DISPONIBLES :
‚Ä¢ arkalia_base ‚Üí Zone de d√©part
‚Ä¢ nexus_station ‚Üí Station NEXUS
‚Ä¢ luna_workshop ‚Üí Atelier LUNA
‚Ä¢ pandora_core ‚Üí C≈ìur de PANDORA

üó∫Ô∏è FONCTIONNALIT√âS :
‚Ä¢ Calcul d'itin√©raire
‚Ä¢ Navigation GPS
‚Ä¢ Points d'int√©r√™t
‚Ä¢ Historique de navigation

üåô LUNA : "Navigue avec confiance, hacker ! Je te guide !"

üí° Utilise la navigation pour d√©couvrir de nouveaux endroits !""",
            "score_gagne": 25,
            "badge": "Navigateur",
            "profile_updated": True,
        }
